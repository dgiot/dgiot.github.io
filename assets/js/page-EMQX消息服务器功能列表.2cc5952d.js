(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{513:function(v,_,e){"use strict";e.r(_);var i=e(1),r=Object(i.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"emq-x-消息服务器功能列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-消息服务器功能列表"}},[v._v("#")]),v._v(" EMQ X 消息服务器功能列表")]),v._v(" "),e("ul",[e("li",[v._v("完整的 MQTT V3.1/V3.1.1 及 V5.0 协议规范支持\n"),e("ul",[e("li",[v._v("QoS0, QoS1, QoS2 消息支持")]),v._v(" "),e("li",[v._v("持久会话与离线消息支持")]),v._v(" "),e("li",[v._v("Retained 消息支持")]),v._v(" "),e("li",[v._v("Last Will 消息支持")])])]),v._v(" "),e("li",[v._v("TCP/SSL 连接支持")]),v._v(" "),e("li",[v._v("MQTT/WebSocket/SSL 支持")]),v._v(" "),e("li",[v._v("HTTP 消息发布接口支持")]),v._v(" "),e("li",[v._v("$SYS/# 系统主题支持")]),v._v(" "),e("li",[v._v("客户端在线状态查询与订阅支持")]),v._v(" "),e("li",[v._v("客户端 ID 或 IP 地址认证支持")]),v._v(" "),e("li",[v._v("用户名密码认证支持")]),v._v(" "),e("li",[v._v("LDAP、Redis、MySQL、PostgreSQL、MongoDB、HTTP 认证集成")]),v._v(" "),e("li",[v._v("浏览器 Cookie 认证")]),v._v(" "),e("li",[v._v("基于客户端 ID、IP 地址、用户名的访问控制 (ACL)")]),v._v(" "),e("li",[v._v("多服务器节点集群 (Cluster)")]),v._v(" "),e("li",[v._v("支持 manual、mcast、dns、etcd、k8s 等多种集群发现方式")]),v._v(" "),e("li",[v._v("网络分区自动愈合")]),v._v(" "),e("li",[v._v("消息速率限制")]),v._v(" "),e("li",[v._v("连接速率限制")]),v._v(" "),e("li",[v._v("按分区配置节点")]),v._v(" "),e("li",[v._v("多服务器节点桥接 (Bridge)")]),v._v(" "),e("li",[v._v("MQTT Broker 桥接支持")]),v._v(" "),e("li",[v._v("Stomp 协议支持")]),v._v(" "),e("li",[v._v("MQTT-SN 协议支持")]),v._v(" "),e("li",[v._v("CoAP 协议支持")]),v._v(" "),e("li",[v._v("LwM2M 协议支持")]),v._v(" "),e("li",[v._v("Stomp/SockJS 支持")]),v._v(" "),e("li",[v._v("延时 Publish ($delay/topic)")]),v._v(" "),e("li",[v._v("Flapping 检测")]),v._v(" "),e("li",[v._v("黑名单支持")]),v._v(" "),e("li",[v._v("共享订阅 ($share/:group/topic)")]),v._v(" "),e("li",[v._v("TLS/PSK 支持")]),v._v(" "),e("li",[v._v("规则引擎\n"),e("ul",[e("li",[v._v("空动作 (调试)")]),v._v(" "),e("li",[v._v("消息重新发布")]),v._v(" "),e("li",[v._v("桥接数据到 MQTT Broker")]),v._v(" "),e("li",[v._v("检查 (调试)")]),v._v(" "),e("li",[v._v("发送数据到 Web 服务")])])])]),v._v(" "),e("strong",[v._v("\n以下是 EMQ X Enterprise 特有功能\n")]),v._v(" "),e("ul",[e("li",[v._v("Scalable RPC 架构: 分离 Erlang 自身的集群通道与 EMQ X 节点间的数据通道")]),v._v(" "),e("li",[v._v("数据持久化\n"),e("ul",[e("li",[v._v("Redis 存储订阅关系、设备在线状态、MQTT 消息、保留消息，发布 SUB/UNSUB 事件")]),v._v(" "),e("li",[v._v("MySQL 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("PostgreSQL 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("MongoDB 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("Cassandra 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("DynamoDB 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("InfluxDB 存储 MQTT 时序消息")]),v._v(" "),e("li",[v._v("OpenTDSB 存储 MQTT 时序消息")]),v._v(" "),e("li",[v._v("TimescaleDB 存储 MQTT 时序消息")])])]),v._v(" "),e("li",[v._v("消息桥接\n"),e("ul",[e("li",[v._v("Kafka 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 Kafka")]),v._v(" "),e("li",[v._v("RabbitMQ 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 RabbitMQ")]),v._v(" "),e("li",[v._v("Pulsar 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 Pulsar")]),v._v(" "),e("li",[v._v("RocketMQ 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 RocketMQ")])])]),v._v(" "),e("li",[v._v("规则引擎\n"),e("ul",[e("li",[v._v("消息编解码")]),v._v(" "),e("li",[v._v("桥接数据到 Kafka")]),v._v(" "),e("li",[v._v("桥接数据到 RabbitMQ")]),v._v(" "),e("li",[v._v("桥接数据到 RocketMQ")]),v._v(" "),e("li",[v._v("桥接数据到 Pulsar")]),v._v(" "),e("li",[v._v("保存数据到 PostgreSQL")]),v._v(" "),e("li",[v._v("保存数据到 MySQL")]),v._v(" "),e("li",[v._v("保存数据到 OpenTSDB")]),v._v(" "),e("li",[v._v("保存数据到 Redis")]),v._v(" "),e("li",[v._v("保存数据到 DynamoDB")]),v._v(" "),e("li",[v._v("保存数据到 MongoDB")]),v._v(" "),e("li",[v._v("保存数据到 InfluxDB")]),v._v(" "),e("li",[v._v("保存数据到 Timescale")]),v._v(" "),e("li",[v._v("保存数据到 Cassandra")]),v._v(" "),e("li",[v._v("保存数据到 ClickHouse")]),v._v(" "),e("li",[v._v("保存数据到 TDengine")]),v._v(" "),e("li",[v._v("离线消息保存到 Redis")]),v._v(" "),e("li",[v._v("离线消息保存到 MySQL")]),v._v(" "),e("li",[v._v("离线消息保存到 PostgreSQL")]),v._v(" "),e("li",[v._v("离线消息保存到 Cassandra")]),v._v(" "),e("li",[v._v("离线消息保存到 MongoDB")]),v._v(" "),e("li",[v._v("从 Redis 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 MySQL 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 PostgreSQL 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 Cassandra 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 MongoDB 中获取订阅关系")])])]),v._v(" "),e("li",[v._v("Schema Registry：将 EMQ X 的事件、消息 提供了数据编解码能力")])]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("h2",{attrs:{id:"emq-x-enterprise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-enterprise"}},[v._v("#")]),v._v(" EMQ X Enterprise")]),v._v(" "),e("p",[e("a",{attrs:{href:"https://www.emqx.cn/products/enterprise",target:"_blank",rel:"noopener noreferrer"}},[v._v("EMQ X Enterprise"),e("OutboundLink")],1),v._v(" 是一个强大的企业级物联网 MQTT 消息平台，由开发开源 EMQ X 的人员构建。")]),v._v(" "),e("p",[v._v("EMQ X Enterprise 支持百万级物联网设备一站式接入、MQTT&CoAP 多协议处理、低时延实时消息通信。它保持了 EMQ X 的简单性和高性能，同时增加了许多企业特性：")]),v._v(" "),e("ul",[e("li",[v._v("连接性能增强到百万级、千万级，支持私有协议及行业协议定制，基于 TCP/UDP 私有协议的旧网设备接入兼容，支持全网络多协议设备接入；")]),v._v(" "),e("li",[v._v("支持 Redis, MySQL, PostgreSQL, MongoDB 多种数据库消息数据持久化，消息转换写入 InfluxDB, OpenTSDB, TimescaleDB 多种时序数据库，支持自动从 Redis 或数据库加载订阅，无需客户端主动发起；")]),v._v(" "),e("li",[v._v("消息与流中间件消息桥接：10万/秒高性能高可靠转发消息到 Kafka 流处理中间件，无缝集成 RabbitMQ、Pulsar 企业消息中间件；")]),v._v(" "),e("li",[v._v("全球专业团队技术支持，我们的团队覆盖全球北美、欧洲、中国 5 个分支机构，有来自华为、IBM、Amazon 专业创始团队，以及欧洲、北美、印度近十家合作伙伴，能够全天侯相应一流的技术支持与咨询服务。")])]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("Tips")]),v._v(" "),e("p",[v._v("感谢你对 EMQ X 的支持，如果有企业服务需要，请联系我们的销售人员 sales-cn@emqx.io。")])]),v._v(" "),e("p",[v._v("{% endemqxce %}")]),v._v(" "),e("p",[v._v("{% emqxee %}")]),v._v(" "),e("h2",{attrs:{id:"功能说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能说明"}},[v._v("#")]),v._v(" 功能说明")]),v._v(" "),e("p",[v._v("{% endemqxee %}")]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("h2",{attrs:{id:"企业版功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#企业版功能"}},[v._v("#")]),v._v(" 企业版功能")]),v._v(" "),e("p",[v._v("{% endemqxce %}")]),v._v(" "),e("h3",{attrs:{id:"消息数据存储"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息数据存储"}},[v._v("#")]),v._v(" 消息数据存储")]),v._v(" "),e("p",[v._v("EMQ X 企业版支持存储订阅关系、MQTT 消息、设备状态到\nRedis、MySQL、PostgreSQL、MongoDB、Cassandra、TimescaleDB、InfluxDB、DynamoDB、OpenTDSB\n数据库:")]),v._v(" "),e("p",[v._v('数据存储相关配置，详见"数据存储"章节。')]),v._v(" "),e("h3",{attrs:{id:"消息桥接转发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息桥接转发"}},[v._v("#")]),v._v(" 消息桥接转发")]),v._v(" "),e("p",[v._v("EMQ X 企业版支持直接转发 MQTT 消息到 RabbitMQ、Kafka、Pulsar、RocketMQ、MQTT\nBroker，可作为百万级的物联网接入服务器(IoT Hub):")]),v._v(" "),e("h3",{attrs:{id:"规则引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规则引擎"}},[v._v("#")]),v._v(" 规则引擎")]),v._v(" "),e("p",[v._v("EMQ X 规则引擎可以灵活地处理消息和事件。")]),v._v(" "),e("p",[v._v("EMQ X 企业版规则引擎支持消息重新发布；桥接数据到\nKafka、Pulsar、RocketMQ、RabbitMQ、MQTT Broker；保存数据到\nMySQL、PostgreSQL、Redis、MongoDB、DynamoDB、Cassandra、InfluxDB、OpenTSDB、TimescaleDB；发送数据到\nWebServer:")]),v._v(" "),e("p",[v._v('规则引擎相关配置，详见"规则引擎"章节。')]),v._v(" "),e("h3",{attrs:{id:"编解码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编解码"}},[v._v("#")]),v._v(" 编解码")]),v._v(" "),e("p",[v._v("Schema Registry\n目前可支持三种格式的编解码："),e("a",{attrs:{href:"https://avro.apache.org",target:"_blank",rel:"noopener noreferrer"}},[v._v("Avro"),e("OutboundLink")],1),v._v("，"),e("a",{attrs:{href:"https://developers.google.com/protocol-buffers/",target:"_blank",rel:"noopener noreferrer"}},[v._v("Protobuf"),e("OutboundLink")],1),v._v("，以及自定义编码。其中\nAvro 和 Protobuf 是依赖 Schema 的数据格式，编码后的数据为二进制，解码后为 Map 格式\n。解码后的数据可直接被规则引擎和其他插件使用。用户自定义的\n(3rd-party) 编解码服务通过 HTTP 或 TCP 回调的方式，进行更加贴近业务需求的编解码。")]),v._v(" "),e("p",[v._v('编解码相关配置，详见"编解码"章节。')]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("h2",{attrs:{id:"emq-x-不同版本对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-不同版本对比"}},[v._v("#")]),v._v(" EMQ X 不同版本对比")]),v._v(" "),e("p",[v._v("详细对比以及价格参见 "),e("a",{attrs:{href:"https://www.emqx.cn/products/pricing",target:"_blank",rel:"noopener noreferrer"}},[v._v("EMQ X 定价"),e("OutboundLink")],1),v._v("。")]),v._v(" "),e("p",[v._v("{% endemqxce %}")])])}),[],!1,null,null,null);_.default=r.exports},517:function(v,_,e){"use strict";e.r(_);var i=e(1),r=Object(i.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"emq-x-消息服务器功能列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-消息服务器功能列表"}},[v._v("#")]),v._v(" EMQ X 消息服务器功能列表")]),v._v(" "),e("ul",[e("li",[v._v("完整的 MQTT V3.1/V3.1.1 及 V5.0 协议规范支持\n"),e("ul",[e("li",[v._v("QoS0, QoS1, QoS2 消息支持")]),v._v(" "),e("li",[v._v("持久会话与离线消息支持")]),v._v(" "),e("li",[v._v("Retained 消息支持")]),v._v(" "),e("li",[v._v("Last Will 消息支持")])])]),v._v(" "),e("li",[v._v("TCP/SSL 连接支持")]),v._v(" "),e("li",[v._v("MQTT/WebSocket/SSL 支持")]),v._v(" "),e("li",[v._v("HTTP 消息发布接口支持")]),v._v(" "),e("li",[v._v("$SYS/# 系统主题支持")]),v._v(" "),e("li",[v._v("客户端在线状态查询与订阅支持")]),v._v(" "),e("li",[v._v("客户端 ID 或 IP 地址认证支持")]),v._v(" "),e("li",[v._v("用户名密码认证支持")]),v._v(" "),e("li",[v._v("LDAP、Redis、MySQL、PostgreSQL、MongoDB、HTTP 认证集成")]),v._v(" "),e("li",[v._v("浏览器 Cookie 认证")]),v._v(" "),e("li",[v._v("基于客户端 ID、IP 地址、用户名的访问控制 (ACL)")]),v._v(" "),e("li",[v._v("多服务器节点集群 (Cluster)")]),v._v(" "),e("li",[v._v("支持 manual、mcast、dns、etcd、k8s 等多种集群发现方式")]),v._v(" "),e("li",[v._v("网络分区自动愈合")]),v._v(" "),e("li",[v._v("消息速率限制")]),v._v(" "),e("li",[v._v("连接速率限制")]),v._v(" "),e("li",[v._v("按分区配置节点")]),v._v(" "),e("li",[v._v("多服务器节点桥接 (Bridge)")]),v._v(" "),e("li",[v._v("MQTT Broker 桥接支持")]),v._v(" "),e("li",[v._v("Stomp 协议支持")]),v._v(" "),e("li",[v._v("MQTT-SN 协议支持")]),v._v(" "),e("li",[v._v("CoAP 协议支持")]),v._v(" "),e("li",[v._v("LwM2M 协议支持")]),v._v(" "),e("li",[v._v("Stomp/SockJS 支持")]),v._v(" "),e("li",[v._v("延时 Publish ($delay/topic)")]),v._v(" "),e("li",[v._v("Flapping 检测")]),v._v(" "),e("li",[v._v("黑名单支持")]),v._v(" "),e("li",[v._v("共享订阅 ($share/:group/topic)")]),v._v(" "),e("li",[v._v("TLS/PSK 支持")]),v._v(" "),e("li",[v._v("规则引擎\n"),e("ul",[e("li",[v._v("空动作 (调试)")]),v._v(" "),e("li",[v._v("消息重新发布")]),v._v(" "),e("li",[v._v("桥接数据到 MQTT Broker")]),v._v(" "),e("li",[v._v("检查 (调试)")]),v._v(" "),e("li",[v._v("发送数据到 Web 服务")])])])]),v._v(" "),e("strong",[v._v("\n以下是 EMQ X Enterprise 特有功能\n")]),v._v(" "),e("ul",[e("li",[v._v("Scalable RPC 架构: 分离 Erlang 自身的集群通道与 EMQ X 节点间的数据通道")]),v._v(" "),e("li",[v._v("数据持久化\n"),e("ul",[e("li",[v._v("Redis 存储订阅关系、设备在线状态、MQTT 消息、保留消息，发布 SUB/UNSUB 事件")]),v._v(" "),e("li",[v._v("MySQL 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("PostgreSQL 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("MongoDB 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("Cassandra 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("DynamoDB 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("InfluxDB 存储 MQTT 时序消息")]),v._v(" "),e("li",[v._v("OpenTDSB 存储 MQTT 时序消息")]),v._v(" "),e("li",[v._v("TimescaleDB 存储 MQTT 时序消息")])])]),v._v(" "),e("li",[v._v("消息桥接\n"),e("ul",[e("li",[v._v("Kafka 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 Kafka")]),v._v(" "),e("li",[v._v("RabbitMQ 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 RabbitMQ")]),v._v(" "),e("li",[v._v("Pulsar 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 Pulsar")]),v._v(" "),e("li",[v._v("RocketMQ 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 RocketMQ")])])]),v._v(" "),e("li",[v._v("规则引擎\n"),e("ul",[e("li",[v._v("消息编解码")]),v._v(" "),e("li",[v._v("桥接数据到 Kafka")]),v._v(" "),e("li",[v._v("桥接数据到 RabbitMQ")]),v._v(" "),e("li",[v._v("桥接数据到 RocketMQ")]),v._v(" "),e("li",[v._v("桥接数据到 Pulsar")]),v._v(" "),e("li",[v._v("保存数据到 PostgreSQL")]),v._v(" "),e("li",[v._v("保存数据到 MySQL")]),v._v(" "),e("li",[v._v("保存数据到 OpenTSDB")]),v._v(" "),e("li",[v._v("保存数据到 Redis")]),v._v(" "),e("li",[v._v("保存数据到 DynamoDB")]),v._v(" "),e("li",[v._v("保存数据到 MongoDB")]),v._v(" "),e("li",[v._v("保存数据到 InfluxDB")]),v._v(" "),e("li",[v._v("保存数据到 Timescale")]),v._v(" "),e("li",[v._v("保存数据到 Cassandra")]),v._v(" "),e("li",[v._v("保存数据到 ClickHouse")]),v._v(" "),e("li",[v._v("保存数据到 TDengine")]),v._v(" "),e("li",[v._v("离线消息保存到 Redis")]),v._v(" "),e("li",[v._v("离线消息保存到 MySQL")]),v._v(" "),e("li",[v._v("离线消息保存到 PostgreSQL")]),v._v(" "),e("li",[v._v("离线消息保存到 Cassandra")]),v._v(" "),e("li",[v._v("离线消息保存到 MongoDB")]),v._v(" "),e("li",[v._v("从 Redis 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 MySQL 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 PostgreSQL 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 Cassandra 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 MongoDB 中获取订阅关系")])])]),v._v(" "),e("li",[v._v("Schema Registry：将 EMQ X 的事件、消息 提供了数据编解码能力")])]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("h2",{attrs:{id:"emq-x-enterprise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-enterprise"}},[v._v("#")]),v._v(" EMQ X Enterprise")]),v._v(" "),e("p",[e("a",{attrs:{href:"https://www.emqx.cn/products/enterprise",target:"_blank",rel:"noopener noreferrer"}},[v._v("EMQ X Enterprise"),e("OutboundLink")],1),v._v(" 是一个强大的企业级物联网 MQTT 消息平台，由开发开源 EMQ X 的人员构建。")]),v._v(" "),e("p",[v._v("EMQ X Enterprise 支持百万级物联网设备一站式接入、MQTT&CoAP 多协议处理、低时延实时消息通信。它保持了 EMQ X 的简单性和高性能，同时增加了许多企业特性：")]),v._v(" "),e("ul",[e("li",[v._v("连接性能增强到百万级、千万级，支持私有协议及行业协议定制，基于 TCP/UDP 私有协议的旧网设备接入兼容，支持全网络多协议设备接入；")]),v._v(" "),e("li",[v._v("支持 Redis, MySQL, PostgreSQL, MongoDB 多种数据库消息数据持久化，消息转换写入 InfluxDB, OpenTSDB, TimescaleDB 多种时序数据库，支持自动从 Redis 或数据库加载订阅，无需客户端主动发起；")]),v._v(" "),e("li",[v._v("消息与流中间件消息桥接：10万/秒高性能高可靠转发消息到 Kafka 流处理中间件，无缝集成 RabbitMQ、Pulsar 企业消息中间件；")]),v._v(" "),e("li",[v._v("全球专业团队技术支持，我们的团队覆盖全球北美、欧洲、中国 5 个分支机构，有来自华为、IBM、Amazon 专业创始团队，以及欧洲、北美、印度近十家合作伙伴，能够全天侯相应一流的技术支持与咨询服务。")])]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("Tips")]),v._v(" "),e("p",[v._v("感谢你对 EMQ X 的支持，如果有企业服务需要，请联系我们的销售人员 sales-cn@emqx.io。")])]),v._v(" "),e("p",[v._v("{% endemqxce %}")]),v._v(" "),e("p",[v._v("{% emqxee %}")]),v._v(" "),e("h2",{attrs:{id:"功能说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能说明"}},[v._v("#")]),v._v(" 功能说明")]),v._v(" "),e("p",[v._v("{% endemqxee %}")]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("h2",{attrs:{id:"企业版功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#企业版功能"}},[v._v("#")]),v._v(" 企业版功能")]),v._v(" "),e("p",[v._v("{% endemqxce %}")]),v._v(" "),e("h3",{attrs:{id:"消息数据存储"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息数据存储"}},[v._v("#")]),v._v(" 消息数据存储")]),v._v(" "),e("p",[v._v("EMQ X 企业版支持存储订阅关系、MQTT 消息、设备状态到\nRedis、MySQL、PostgreSQL、MongoDB、Cassandra、TimescaleDB、InfluxDB、DynamoDB、OpenTDSB\n数据库:")]),v._v(" "),e("p",[v._v('数据存储相关配置，详见"数据存储"章节。')]),v._v(" "),e("h3",{attrs:{id:"消息桥接转发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息桥接转发"}},[v._v("#")]),v._v(" 消息桥接转发")]),v._v(" "),e("p",[v._v("EMQ X 企业版支持直接转发 MQTT 消息到 RabbitMQ、Kafka、Pulsar、RocketMQ、MQTT\nBroker，可作为百万级的物联网接入服务器(IoT Hub):")]),v._v(" "),e("h3",{attrs:{id:"规则引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规则引擎"}},[v._v("#")]),v._v(" 规则引擎")]),v._v(" "),e("p",[v._v("EMQ X 规则引擎可以灵活地处理消息和事件。")]),v._v(" "),e("p",[v._v("EMQ X 企业版规则引擎支持消息重新发布；桥接数据到\nKafka、Pulsar、RocketMQ、RabbitMQ、MQTT Broker；保存数据到\nMySQL、PostgreSQL、Redis、MongoDB、DynamoDB、Cassandra、InfluxDB、OpenTSDB、TimescaleDB；发送数据到\nWebServer:")]),v._v(" "),e("p",[v._v('规则引擎相关配置，详见"规则引擎"章节。')]),v._v(" "),e("h3",{attrs:{id:"编解码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编解码"}},[v._v("#")]),v._v(" 编解码")]),v._v(" "),e("p",[v._v("Schema Registry\n目前可支持三种格式的编解码："),e("a",{attrs:{href:"https://avro.apache.org",target:"_blank",rel:"noopener noreferrer"}},[v._v("Avro"),e("OutboundLink")],1),v._v("，"),e("a",{attrs:{href:"https://developers.google.com/protocol-buffers/",target:"_blank",rel:"noopener noreferrer"}},[v._v("Protobuf"),e("OutboundLink")],1),v._v("，以及自定义编码。其中\nAvro 和 Protobuf 是依赖 Schema 的数据格式，编码后的数据为二进制，解码后为 Map 格式\n。解码后的数据可直接被规则引擎和其他插件使用。用户自定义的\n(3rd-party) 编解码服务通过 HTTP 或 TCP 回调的方式，进行更加贴近业务需求的编解码。")]),v._v(" "),e("p",[v._v('编解码相关配置，详见"编解码"章节。')]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("h2",{attrs:{id:"emq-x-不同版本对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-不同版本对比"}},[v._v("#")]),v._v(" EMQ X 不同版本对比")]),v._v(" "),e("p",[v._v("详细对比以及价格参见 "),e("a",{attrs:{href:"https://www.emqx.cn/products/pricing",target:"_blank",rel:"noopener noreferrer"}},[v._v("EMQ X 定价"),e("OutboundLink")],1),v._v("。")]),v._v(" "),e("p",[v._v("{% endemqxce %}")])])}),[],!1,null,null,null);_.default=r.exports},535:function(v,_,e){"use strict";e.r(_);var i=e(1),r=Object(i.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"emq-x-消息服务器功能列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-消息服务器功能列表"}},[v._v("#")]),v._v(" EMQ X 消息服务器功能列表")]),v._v(" "),e("ul",[e("li",[v._v("完整的 MQTT V3.1/V3.1.1 及 V5.0 协议规范支持\n"),e("ul",[e("li",[v._v("QoS0, QoS1, QoS2 消息支持")]),v._v(" "),e("li",[v._v("持久会话与离线消息支持")]),v._v(" "),e("li",[v._v("Retained 消息支持")]),v._v(" "),e("li",[v._v("Last Will 消息支持")])])]),v._v(" "),e("li",[v._v("TCP/SSL 连接支持")]),v._v(" "),e("li",[v._v("MQTT/WebSocket/SSL 支持")]),v._v(" "),e("li",[v._v("HTTP 消息发布接口支持")]),v._v(" "),e("li",[v._v("$SYS/# 系统主题支持")]),v._v(" "),e("li",[v._v("客户端在线状态查询与订阅支持")]),v._v(" "),e("li",[v._v("客户端 ID 或 IP 地址认证支持")]),v._v(" "),e("li",[v._v("用户名密码认证支持")]),v._v(" "),e("li",[v._v("LDAP、Redis、MySQL、PostgreSQL、MongoDB、HTTP 认证集成")]),v._v(" "),e("li",[v._v("浏览器 Cookie 认证")]),v._v(" "),e("li",[v._v("基于客户端 ID、IP 地址、用户名的访问控制 (ACL)")]),v._v(" "),e("li",[v._v("多服务器节点集群 (Cluster)")]),v._v(" "),e("li",[v._v("支持 manual、mcast、dns、etcd、k8s 等多种集群发现方式")]),v._v(" "),e("li",[v._v("网络分区自动愈合")]),v._v(" "),e("li",[v._v("消息速率限制")]),v._v(" "),e("li",[v._v("连接速率限制")]),v._v(" "),e("li",[v._v("按分区配置节点")]),v._v(" "),e("li",[v._v("多服务器节点桥接 (Bridge)")]),v._v(" "),e("li",[v._v("MQTT Broker 桥接支持")]),v._v(" "),e("li",[v._v("Stomp 协议支持")]),v._v(" "),e("li",[v._v("MQTT-SN 协议支持")]),v._v(" "),e("li",[v._v("CoAP 协议支持")]),v._v(" "),e("li",[v._v("LwM2M 协议支持")]),v._v(" "),e("li",[v._v("Stomp/SockJS 支持")]),v._v(" "),e("li",[v._v("延时 Publish ($delay/topic)")]),v._v(" "),e("li",[v._v("Flapping 检测")]),v._v(" "),e("li",[v._v("黑名单支持")]),v._v(" "),e("li",[v._v("共享订阅 ($share/:group/topic)")]),v._v(" "),e("li",[v._v("TLS/PSK 支持")]),v._v(" "),e("li",[v._v("规则引擎\n"),e("ul",[e("li",[v._v("空动作 (调试)")]),v._v(" "),e("li",[v._v("消息重新发布")]),v._v(" "),e("li",[v._v("桥接数据到 MQTT Broker")]),v._v(" "),e("li",[v._v("检查 (调试)")]),v._v(" "),e("li",[v._v("发送数据到 Web 服务")])])])]),v._v(" "),e("strong",[v._v("\n以下是 EMQ X Enterprise 特有功能\n")]),v._v(" "),e("ul",[e("li",[v._v("Scalable RPC 架构: 分离 Erlang 自身的集群通道与 EMQ X 节点间的数据通道")]),v._v(" "),e("li",[v._v("数据持久化\n"),e("ul",[e("li",[v._v("Redis 存储订阅关系、设备在线状态、MQTT 消息、保留消息，发布 SUB/UNSUB 事件")]),v._v(" "),e("li",[v._v("MySQL 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("PostgreSQL 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("MongoDB 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("Cassandra 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("DynamoDB 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("InfluxDB 存储 MQTT 时序消息")]),v._v(" "),e("li",[v._v("OpenTDSB 存储 MQTT 时序消息")]),v._v(" "),e("li",[v._v("TimescaleDB 存储 MQTT 时序消息")])])]),v._v(" "),e("li",[v._v("消息桥接\n"),e("ul",[e("li",[v._v("Kafka 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 Kafka")]),v._v(" "),e("li",[v._v("RabbitMQ 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 RabbitMQ")]),v._v(" "),e("li",[v._v("Pulsar 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 Pulsar")]),v._v(" "),e("li",[v._v("RocketMQ 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 RocketMQ")])])]),v._v(" "),e("li",[v._v("规则引擎\n"),e("ul",[e("li",[v._v("消息编解码")]),v._v(" "),e("li",[v._v("桥接数据到 Kafka")]),v._v(" "),e("li",[v._v("桥接数据到 RabbitMQ")]),v._v(" "),e("li",[v._v("桥接数据到 RocketMQ")]),v._v(" "),e("li",[v._v("桥接数据到 Pulsar")]),v._v(" "),e("li",[v._v("保存数据到 PostgreSQL")]),v._v(" "),e("li",[v._v("保存数据到 MySQL")]),v._v(" "),e("li",[v._v("保存数据到 OpenTSDB")]),v._v(" "),e("li",[v._v("保存数据到 Redis")]),v._v(" "),e("li",[v._v("保存数据到 DynamoDB")]),v._v(" "),e("li",[v._v("保存数据到 MongoDB")]),v._v(" "),e("li",[v._v("保存数据到 InfluxDB")]),v._v(" "),e("li",[v._v("保存数据到 Timescale")]),v._v(" "),e("li",[v._v("保存数据到 Cassandra")]),v._v(" "),e("li",[v._v("保存数据到 ClickHouse")]),v._v(" "),e("li",[v._v("保存数据到 TDengine")]),v._v(" "),e("li",[v._v("离线消息保存到 Redis")]),v._v(" "),e("li",[v._v("离线消息保存到 MySQL")]),v._v(" "),e("li",[v._v("离线消息保存到 PostgreSQL")]),v._v(" "),e("li",[v._v("离线消息保存到 Cassandra")]),v._v(" "),e("li",[v._v("离线消息保存到 MongoDB")]),v._v(" "),e("li",[v._v("从 Redis 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 MySQL 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 PostgreSQL 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 Cassandra 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 MongoDB 中获取订阅关系")])])]),v._v(" "),e("li",[v._v("Schema Registry：将 EMQ X 的事件、消息 提供了数据编解码能力")])]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("h2",{attrs:{id:"emq-x-enterprise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-enterprise"}},[v._v("#")]),v._v(" EMQ X Enterprise")]),v._v(" "),e("p",[e("a",{attrs:{href:"https://www.emqx.cn/products/enterprise",target:"_blank",rel:"noopener noreferrer"}},[v._v("EMQ X Enterprise"),e("OutboundLink")],1),v._v(" 是一个强大的企业级物联网 MQTT 消息平台，由开发开源 EMQ X 的人员构建。")]),v._v(" "),e("p",[v._v("EMQ X Enterprise 支持百万级物联网设备一站式接入、MQTT&CoAP 多协议处理、低时延实时消息通信。它保持了 EMQ X 的简单性和高性能，同时增加了许多企业特性：")]),v._v(" "),e("ul",[e("li",[v._v("连接性能增强到百万级、千万级，支持私有协议及行业协议定制，基于 TCP/UDP 私有协议的旧网设备接入兼容，支持全网络多协议设备接入；")]),v._v(" "),e("li",[v._v("支持 Redis, MySQL, PostgreSQL, MongoDB 多种数据库消息数据持久化，消息转换写入 InfluxDB, OpenTSDB, TimescaleDB 多种时序数据库，支持自动从 Redis 或数据库加载订阅，无需客户端主动发起；")]),v._v(" "),e("li",[v._v("消息与流中间件消息桥接：10万/秒高性能高可靠转发消息到 Kafka 流处理中间件，无缝集成 RabbitMQ、Pulsar 企业消息中间件；")]),v._v(" "),e("li",[v._v("全球专业团队技术支持，我们的团队覆盖全球北美、欧洲、中国 5 个分支机构，有来自华为、IBM、Amazon 专业创始团队，以及欧洲、北美、印度近十家合作伙伴，能够全天侯相应一流的技术支持与咨询服务。")])]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("提示")]),v._v(" "),e("p",[v._v("感谢你对 EMQ X 的支持，如果有企业服务需要，请联系我们的销售人员 sales-cn@emqx.io。")])]),v._v(" "),e("p",[v._v("{% endemqxce %}")]),v._v(" "),e("p",[v._v("{% emqxee %}")]),v._v(" "),e("h2",{attrs:{id:"功能说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能说明"}},[v._v("#")]),v._v(" 功能说明")]),v._v(" "),e("p",[v._v("{% endemqxee %}")]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("h2",{attrs:{id:"企业版功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#企业版功能"}},[v._v("#")]),v._v(" 企业版功能")]),v._v(" "),e("p",[v._v("{% endemqxce %}")]),v._v(" "),e("h3",{attrs:{id:"消息数据存储"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息数据存储"}},[v._v("#")]),v._v(" 消息数据存储")]),v._v(" "),e("p",[v._v("EMQ X 企业版支持存储订阅关系、MQTT 消息、设备状态到\nRedis、MySQL、PostgreSQL、MongoDB、Cassandra、TimescaleDB、InfluxDB、DynamoDB、OpenTDSB\n数据库:")]),v._v(" "),e("p",[v._v('数据存储相关配置，详见"数据存储"章节。')]),v._v(" "),e("h3",{attrs:{id:"消息桥接转发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息桥接转发"}},[v._v("#")]),v._v(" 消息桥接转发")]),v._v(" "),e("p",[v._v("EMQ X 企业版支持直接转发 MQTT 消息到 RabbitMQ、Kafka、Pulsar、RocketMQ、MQTT\nBroker，可作为百万级的物联网接入服务器(IoT Hub):")]),v._v(" "),e("h3",{attrs:{id:"规则引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规则引擎"}},[v._v("#")]),v._v(" 规则引擎")]),v._v(" "),e("p",[v._v("EMQ X 规则引擎可以灵活地处理消息和事件。")]),v._v(" "),e("p",[v._v("EMQ X 企业版规则引擎支持消息重新发布；桥接数据到\nKafka、Pulsar、RocketMQ、RabbitMQ、MQTT Broker；保存数据到\nMySQL、PostgreSQL、Redis、MongoDB、DynamoDB、Cassandra、InfluxDB、OpenTSDB、TimescaleDB；发送数据到\nWebServer:")]),v._v(" "),e("p",[v._v('规则引擎相关配置，详见"规则引擎"章节。')]),v._v(" "),e("h3",{attrs:{id:"编解码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编解码"}},[v._v("#")]),v._v(" 编解码")]),v._v(" "),e("p",[v._v("Schema Registry\n目前可支持三种格式的编解码："),e("a",{attrs:{href:"https://avro.apache.org",target:"_blank",rel:"noopener noreferrer"}},[v._v("Avro"),e("OutboundLink")],1),v._v("，"),e("a",{attrs:{href:"https://developers.google.com/protocol-buffers/",target:"_blank",rel:"noopener noreferrer"}},[v._v("Protobuf"),e("OutboundLink")],1),v._v("，以及自定义编码。其中\nAvro 和 Protobuf 是依赖 Schema 的数据格式，编码后的数据为二进制，解码后为 Map 格式\n。解码后的数据可直接被规则引擎和其他插件使用。用户自定义的\n(3rd-party) 编解码服务通过 HTTP 或 TCP 回调的方式，进行更加贴近业务需求的编解码。")]),v._v(" "),e("p",[v._v('编解码相关配置，详见"编解码"章节。')]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("h2",{attrs:{id:"emq-x-不同版本对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-不同版本对比"}},[v._v("#")]),v._v(" EMQ X 不同版本对比")]),v._v(" "),e("p",[v._v("详细对比以及价格参见 "),e("a",{attrs:{href:"https://www.emqx.cn/products/pricing",target:"_blank",rel:"noopener noreferrer"}},[v._v("EMQ X 定价"),e("OutboundLink")],1),v._v("。")]),v._v(" "),e("p",[v._v("{% endemqxce %}")])])}),[],!1,null,null,null);_.default=r.exports},539:function(v,_,e){"use strict";e.r(_);var i=e(1),r=Object(i.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"emq-x-消息服务器功能列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-消息服务器功能列表"}},[v._v("#")]),v._v(" EMQ X 消息服务器功能列表")]),v._v(" "),e("ul",[e("li",[v._v("完整的 MQTT V3.1/V3.1.1 及 V5.0 协议规范支持\n"),e("ul",[e("li",[v._v("QoS0, QoS1, QoS2 消息支持")]),v._v(" "),e("li",[v._v("持久会话与离线消息支持")]),v._v(" "),e("li",[v._v("Retained 消息支持")]),v._v(" "),e("li",[v._v("Last Will 消息支持")])])]),v._v(" "),e("li",[v._v("TCP/SSL 连接支持")]),v._v(" "),e("li",[v._v("MQTT/WebSocket/SSL 支持")]),v._v(" "),e("li",[v._v("HTTP 消息发布接口支持")]),v._v(" "),e("li",[v._v("$SYS/# 系统主题支持")]),v._v(" "),e("li",[v._v("客户端在线状态查询与订阅支持")]),v._v(" "),e("li",[v._v("客户端 ID 或 IP 地址认证支持")]),v._v(" "),e("li",[v._v("用户名密码认证支持")]),v._v(" "),e("li",[v._v("LDAP、Redis、MySQL、PostgreSQL、MongoDB、HTTP 认证集成")]),v._v(" "),e("li",[v._v("浏览器 Cookie 认证")]),v._v(" "),e("li",[v._v("基于客户端 ID、IP 地址、用户名的访问控制 (ACL)")]),v._v(" "),e("li",[v._v("多服务器节点集群 (Cluster)")]),v._v(" "),e("li",[v._v("支持 manual、mcast、dns、etcd、k8s 等多种集群发现方式")]),v._v(" "),e("li",[v._v("网络分区自动愈合")]),v._v(" "),e("li",[v._v("消息速率限制")]),v._v(" "),e("li",[v._v("连接速率限制")]),v._v(" "),e("li",[v._v("按分区配置节点")]),v._v(" "),e("li",[v._v("多服务器节点桥接 (Bridge)")]),v._v(" "),e("li",[v._v("MQTT Broker 桥接支持")]),v._v(" "),e("li",[v._v("Stomp 协议支持")]),v._v(" "),e("li",[v._v("MQTT-SN 协议支持")]),v._v(" "),e("li",[v._v("CoAP 协议支持")]),v._v(" "),e("li",[v._v("LwM2M 协议支持")]),v._v(" "),e("li",[v._v("Stomp/SockJS 支持")]),v._v(" "),e("li",[v._v("延时 Publish ($delay/topic)")]),v._v(" "),e("li",[v._v("Flapping 检测")]),v._v(" "),e("li",[v._v("黑名单支持")]),v._v(" "),e("li",[v._v("共享订阅 ($share/:group/topic)")]),v._v(" "),e("li",[v._v("TLS/PSK 支持")]),v._v(" "),e("li",[v._v("规则引擎\n"),e("ul",[e("li",[v._v("空动作 (调试)")]),v._v(" "),e("li",[v._v("消息重新发布")]),v._v(" "),e("li",[v._v("桥接数据到 MQTT Broker")]),v._v(" "),e("li",[v._v("检查 (调试)")]),v._v(" "),e("li",[v._v("发送数据到 Web 服务")])])])]),v._v(" "),e("strong",[v._v("\n以下是 EMQ X Enterprise 特有功能\n")]),v._v(" "),e("ul",[e("li",[v._v("Scalable RPC 架构: 分离 Erlang 自身的集群通道与 EMQ X 节点间的数据通道")]),v._v(" "),e("li",[v._v("数据持久化\n"),e("ul",[e("li",[v._v("Redis 存储订阅关系、设备在线状态、MQTT 消息、保留消息，发布 SUB/UNSUB 事件")]),v._v(" "),e("li",[v._v("MySQL 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("PostgreSQL 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("MongoDB 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("Cassandra 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("DynamoDB 存储订阅关系、设备在线状态、MQTT 消息、保留消息")]),v._v(" "),e("li",[v._v("InfluxDB 存储 MQTT 时序消息")]),v._v(" "),e("li",[v._v("OpenTDSB 存储 MQTT 时序消息")]),v._v(" "),e("li",[v._v("TimescaleDB 存储 MQTT 时序消息")])])]),v._v(" "),e("li",[v._v("消息桥接\n"),e("ul",[e("li",[v._v("Kafka 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 Kafka")]),v._v(" "),e("li",[v._v("RabbitMQ 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 RabbitMQ")]),v._v(" "),e("li",[v._v("Pulsar 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 Pulsar")]),v._v(" "),e("li",[v._v("RocketMQ 桥接：EMQ X 内置 Bridge 直接转发 MQTT 消息、设备上下线事件到 RocketMQ")])])]),v._v(" "),e("li",[v._v("规则引擎\n"),e("ul",[e("li",[v._v("消息编解码")]),v._v(" "),e("li",[v._v("桥接数据到 Kafka")]),v._v(" "),e("li",[v._v("桥接数据到 RabbitMQ")]),v._v(" "),e("li",[v._v("桥接数据到 RocketMQ")]),v._v(" "),e("li",[v._v("桥接数据到 Pulsar")]),v._v(" "),e("li",[v._v("保存数据到 PostgreSQL")]),v._v(" "),e("li",[v._v("保存数据到 MySQL")]),v._v(" "),e("li",[v._v("保存数据到 OpenTSDB")]),v._v(" "),e("li",[v._v("保存数据到 Redis")]),v._v(" "),e("li",[v._v("保存数据到 DynamoDB")]),v._v(" "),e("li",[v._v("保存数据到 MongoDB")]),v._v(" "),e("li",[v._v("保存数据到 InfluxDB")]),v._v(" "),e("li",[v._v("保存数据到 Timescale")]),v._v(" "),e("li",[v._v("保存数据到 Cassandra")]),v._v(" "),e("li",[v._v("保存数据到 ClickHouse")]),v._v(" "),e("li",[v._v("保存数据到 TDengine")]),v._v(" "),e("li",[v._v("离线消息保存到 Redis")]),v._v(" "),e("li",[v._v("离线消息保存到 MySQL")]),v._v(" "),e("li",[v._v("离线消息保存到 PostgreSQL")]),v._v(" "),e("li",[v._v("离线消息保存到 Cassandra")]),v._v(" "),e("li",[v._v("离线消息保存到 MongoDB")]),v._v(" "),e("li",[v._v("从 Redis 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 MySQL 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 PostgreSQL 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 Cassandra 中获取订阅关系")]),v._v(" "),e("li",[v._v("从 MongoDB 中获取订阅关系")])])]),v._v(" "),e("li",[v._v("Schema Registry：将 EMQ X 的事件、消息 提供了数据编解码能力")])]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("h2",{attrs:{id:"emq-x-enterprise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-enterprise"}},[v._v("#")]),v._v(" EMQ X Enterprise")]),v._v(" "),e("p",[e("a",{attrs:{href:"https://www.emqx.cn/products/enterprise",target:"_blank",rel:"noopener noreferrer"}},[v._v("EMQ X Enterprise"),e("OutboundLink")],1),v._v(" 是一个强大的企业级物联网 MQTT 消息平台，由开发开源 EMQ X 的人员构建。")]),v._v(" "),e("p",[v._v("EMQ X Enterprise 支持百万级物联网设备一站式接入、MQTT&CoAP 多协议处理、低时延实时消息通信。它保持了 EMQ X 的简单性和高性能，同时增加了许多企业特性：")]),v._v(" "),e("ul",[e("li",[v._v("连接性能增强到百万级、千万级，支持私有协议及行业协议定制，基于 TCP/UDP 私有协议的旧网设备接入兼容，支持全网络多协议设备接入；")]),v._v(" "),e("li",[v._v("支持 Redis, MySQL, PostgreSQL, MongoDB 多种数据库消息数据持久化，消息转换写入 InfluxDB, OpenTSDB, TimescaleDB 多种时序数据库，支持自动从 Redis 或数据库加载订阅，无需客户端主动发起；")]),v._v(" "),e("li",[v._v("消息与流中间件消息桥接：10万/秒高性能高可靠转发消息到 Kafka 流处理中间件，无缝集成 RabbitMQ、Pulsar 企业消息中间件；")]),v._v(" "),e("li",[v._v("全球专业团队技术支持，我们的团队覆盖全球北美、欧洲、中国 5 个分支机构，有来自华为、IBM、Amazon 专业创始团队，以及欧洲、北美、印度近十家合作伙伴，能够全天侯相应一流的技术支持与咨询服务。")])]),v._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[v._v("提示")]),v._v(" "),e("p",[v._v("感谢你对 EMQ X 的支持，如果有企业服务需要，请联系我们的销售人员 sales-cn@emqx.io。")])]),v._v(" "),e("p",[v._v("{% endemqxce %}")]),v._v(" "),e("p",[v._v("{% emqxee %}")]),v._v(" "),e("h2",{attrs:{id:"功能说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#功能说明"}},[v._v("#")]),v._v(" 功能说明")]),v._v(" "),e("p",[v._v("{% endemqxee %}")]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("h2",{attrs:{id:"企业版功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#企业版功能"}},[v._v("#")]),v._v(" 企业版功能")]),v._v(" "),e("p",[v._v("{% endemqxce %}")]),v._v(" "),e("h3",{attrs:{id:"消息数据存储"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息数据存储"}},[v._v("#")]),v._v(" 消息数据存储")]),v._v(" "),e("p",[v._v("EMQ X 企业版支持存储订阅关系、MQTT 消息、设备状态到\nRedis、MySQL、PostgreSQL、MongoDB、Cassandra、TimescaleDB、InfluxDB、DynamoDB、OpenTDSB\n数据库:")]),v._v(" "),e("p",[v._v('数据存储相关配置，详见"数据存储"章节。')]),v._v(" "),e("h3",{attrs:{id:"消息桥接转发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#消息桥接转发"}},[v._v("#")]),v._v(" 消息桥接转发")]),v._v(" "),e("p",[v._v("EMQ X 企业版支持直接转发 MQTT 消息到 RabbitMQ、Kafka、Pulsar、RocketMQ、MQTT\nBroker，可作为百万级的物联网接入服务器(IoT Hub):")]),v._v(" "),e("h3",{attrs:{id:"规则引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规则引擎"}},[v._v("#")]),v._v(" 规则引擎")]),v._v(" "),e("p",[v._v("EMQ X 规则引擎可以灵活地处理消息和事件。")]),v._v(" "),e("p",[v._v("EMQ X 企业版规则引擎支持消息重新发布；桥接数据到\nKafka、Pulsar、RocketMQ、RabbitMQ、MQTT Broker；保存数据到\nMySQL、PostgreSQL、Redis、MongoDB、DynamoDB、Cassandra、InfluxDB、OpenTSDB、TimescaleDB；发送数据到\nWebServer:")]),v._v(" "),e("p",[v._v('规则引擎相关配置，详见"规则引擎"章节。')]),v._v(" "),e("h3",{attrs:{id:"编解码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编解码"}},[v._v("#")]),v._v(" 编解码")]),v._v(" "),e("p",[v._v("Schema Registry\n目前可支持三种格式的编解码："),e("a",{attrs:{href:"https://avro.apache.org",target:"_blank",rel:"noopener noreferrer"}},[v._v("Avro"),e("OutboundLink")],1),v._v("，"),e("a",{attrs:{href:"https://developers.google.com/protocol-buffers/",target:"_blank",rel:"noopener noreferrer"}},[v._v("Protobuf"),e("OutboundLink")],1),v._v("，以及自定义编码。其中\nAvro 和 Protobuf 是依赖 Schema 的数据格式，编码后的数据为二进制，解码后为 Map 格式\n。解码后的数据可直接被规则引擎和其他插件使用。用户自定义的\n(3rd-party) 编解码服务通过 HTTP 或 TCP 回调的方式，进行更加贴近业务需求的编解码。")]),v._v(" "),e("p",[v._v('编解码相关配置，详见"编解码"章节。')]),v._v(" "),e("p",[v._v("{% emqxce %}")]),v._v(" "),e("h2",{attrs:{id:"emq-x-不同版本对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#emq-x-不同版本对比"}},[v._v("#")]),v._v(" EMQ X 不同版本对比")]),v._v(" "),e("p",[v._v("详细对比以及价格参见 "),e("a",{attrs:{href:"https://www.emqx.cn/products/pricing",target:"_blank",rel:"noopener noreferrer"}},[v._v("EMQ X 定价"),e("OutboundLink")],1),v._v("。")]),v._v(" "),e("p",[v._v("{% endemqxce %}")])])}),[],!1,null,null,null);_.default=r.exports}}]);